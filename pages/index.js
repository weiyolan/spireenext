import React, { useEffect, useState , useRef} from 'react'
import Head from 'next/head'
import Image from 'next/image'
import Background from '@context/Background'
import { PageWrapper } from '@/components/context/pageContext'
import { useAppContext } from '@/components/context/appContext'
import { useDimensions } from '@/utils/useDimensions'

import Title from '@/components/Title'

import ScrollVisual from '@/components/scroll/ScrollVisual'
import ScrollingDiv from '@/components/scroll/ScrollingDiv'
import ScrollingDiv2 from '@/components/scroll/ScrollingDiv2'
import FadeDiv from '@/components/scroll/FadeDiv'

import SpireeStory from '../public/images/spireeStory.svg'
import Story1Astrid from '@/components/story/Story1Astrid'
import Story2Pharma from '@/components/story/Story2Pharma'
import Story3Mountain from '@/components/story/Story3Mountain'
import Story4Flowers from '@/components/story/Story4Flowers'
import Story5Meaning from '@/components/story/Story5Meaning'
import Story6Spiree from '@/components/story/Story6Spiree'
import Story7SunMoon from '@/components/story/Story7SunMoon'
import Story8Merino from '@/components/story/Story8Merino'
import Story9Passion from '@/components/story/Story9Passion'
import Story10RE from '@/components/story/Story10RE'
import Story11Women from '@/components/story/Story11Women'
import Story12Support from '@/components/story/Story12Support'
import StoryText from '@/components/story/StoryText'

export default function Home({ }) {


  const { scrolled, width:screenWidth, height:screenHeight, screens } = useAppContext();
  // let svgRef = useRef(null)
  let [svgHeight, setSvgHeight] = useState(undefined)
  let [titleHeight, setTitleHeight] = useState(undefined)
  let [svgViewHeight, setSvgViewHeight] = useState(undefined)
  // const {width:svgWidth, height:svgHeight} = useDimensions(svgRef)

  let [steps, setSteps] = useState([{from:0.45, for:400}, {from: 0.74, for:450}]);
  
  function getStepsFromWidth() {
    // let screens = {
    //   xxl: width>=1536,
    //   xl: width>=1280,
    //   lg: width>=1024,
    //   md: width>=768,
    //   sm: width>=640,
    //   mobl: width>=420,
    //   mobm: width>=350,
    // }
      if (screens.xxl) {return [{from:0.44, for:450}, {from: 0.735, for:490}]}

      if (screens.xl) {return [{from:0.44, for:400}, {from: 0.73, for:540}]}
      
      if (screens.lg) {return [{from:0.46, for:400}, {from: 0.73, for:400}]}

      // if (screens.) {return [{from:0.44, for:400}, {from: 0.74, for:450}]}

      else return [{from:0.6666, for:350}, {from: 0.74, for:450}]
      // if (myWidth > 1080) {return [{from:0.49, for:350},{from: 0.74, for:450}]}
      // if (myWidth > 1080) {return [{from:0.49, for:350},{from: 0.74, for:450}]}
  }

  useEffect(()=>{
    setSteps(getStepsFromWidth())
    // console.log(getStepsFromWidth())
  },[screenWidth])

  // useEffect(()=>{
  //   window.scrollTo({
  //     top: 35,
  //     behavior: "smooth",
  // });
  // },[])

  useEffect(()=>{
      console.log('svgViewHeight '+svgViewHeight, 'svgHeight '+svgHeight, 'screenHeight ' + screenHeight )

    if (screenHeight > 0 && titleHeight > 0) {
    setSvgViewHeight(screenHeight-titleHeight)
      // console.log(`h-[${screenHeight-titleHeight}]`)
    }

  // let heightSVG = `h-[${svgHeight||0}px]`


  },[screenHeight, titleHeight, svgHeight,svgViewHeight])

  useEffect(()=>{console.log(svgViewHeight)},[svgViewHeight])

 
  let speed = 0
  let heightToScroll = 'h-[3000px]'

  function getStyle (letter,value,unity) {
    return `${letter}-[${value}${unity}]`
  }

  // let steps = getStepsFromWidth()

  // let step1= {from:0.49, for:350}
  // let step2= {from: 0.74, for:450}

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <main className={`w-full ${heightToScroll}`}>
        <ScrollVisual scrolled={scrolled} />

        <PageWrapper darkMode={true} svgWidth={'w-4/5 xl:w-3/5'} >
          <Background />

          <Title setHeight={setTitleHeight} mainTitle={'About SpirÃ©e'} subTitle={'Empowering women to run everywhere, with confidence and style.'} />
          
          <section className='flex w-4/5 mx-auto relative' >
          {/* style={{height: svgViewHeight || '90vh', top: titleHeight||100 }} */}
          {/* ${getStyle('h', svgViewHeight,'px')} ${getStyle('top', titleHeight,'px')}  */}
            <FadeDiv style={{height: svgViewHeight+'px', top: titleHeight+'px'}} className={`fixed w-full left-1/2 -translate-x-1/2 border-red-700 border`} amount={10} type='top'>
            
              {/* <ScrollingDiv className='fixed w-full top-[40px] left-1/2' 
                speed = {speed}
                step1 = {steps[0]}
                step2 = {steps[1]}> */}
          {/* ${svgHeight?`h-[${svgHeight}px]`:'h-[2438px]'} */}
          {/* h-[2438px] */}

          {/* ${getStyle('h', svgHeight,'px')} */}
              <ScrollingDiv2 style={{height: svgHeight+'px'}} className={`fixed w-full left-1/2 -translate-x-1/2 transition-all duration-1000 top-[20px] ${scrolled<steps[0]?.from?'-translate-y-[0]':scrolled<steps[1]?.from?' -translate-y-[30%] ':' -translate-y-[63%] ' }`} 
                >

                <Story1Astrid setSvgHeight={setSvgHeight} speed={1} scrollMin={0} scrollMax={0} />
                <Story2Pharma speed={1} scrollMin={0} scrollMax={0.125} />
                <Story3Mountain speed={1} scrollMin={0.13} scrollMax={0.2} />
                <Story4Flowers speed={1} scrollMin={0.215} scrollMax={0.35} />
                <Story5Meaning speed={1} scrollMin={0.39} scrollMax={0.42} />
                <Story6Spiree speed={1} scrollMin={0.45} scrollMax={0.53} />
                <Story7SunMoon speed={1} scrollMin={0.55} scrollMax={0.62} />
                <Story8Merino speed={1} scrollMin={0.64} scrollMax={0.71} />
                <Story9Passion speed={1} scrollMin={0.73} scrollMax={0.76} />
                <Story10RE speed={1} scrollMin={0.78} scrollMax={0.82} />
                <Story11Women speed={1} scrollMin={0.83} scrollMax={0.86} />
                <Story12Support speed={1} scrollMin={0.87} scrollMax={0.95} />
                <StoryText/>

              </ScrollingDiv2>
            </FadeDiv>
          </section>

          

        </PageWrapper>
      </main>
    </>
  )
}


export async function getStaticProps() {
  //   const pets = await client.fetch(`*[_type == "post"]`);

  return {
    props: {
      //   pets
    }
  };
}

